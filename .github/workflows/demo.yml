name: demo

on:
  push:
  workflow_dispatch:

jobs:
  run-demo:
    runs-on: ubuntu-latest
    env:
      MPLBACKEND: Agg
      PIP_DISABLE_PIP_VERSION_CHECK: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
          echo "PYTHONPATH=$GITHUB_WORKSPACE/src" >> $GITHUB_ENV
          echo "Using PYTHONPATH=$GITHUB_WORKSPACE/src"

      - name: Sanity check CLI
        run: |
          python -c "import trj_opt; print('Imported trj_opt OK')"
          python -m trj_opt.cli --help

      - name: Run demo
        shell: bash
        run: |
          set -euo pipefail
          OUT=trj_opt_out
          mkdir -p "$OUT"

          if python -m trj_opt.cli demo --out_dir "$OUT"; then
            echo "Ran built-in demo."
          else
            echo "No 'demo' subcommand â€” running minimal pipeline."
            TE="examples/run_demo_T.csv";   [ -f "$TE" ]  || TE="run_demo_T.csv"
            DIT="examples/run_demo_Dit.csv"; [ -f "$DIT" ] || DIT="run_demo_Dit.csv"
            DOE="examples/doe_plan.csv";     [ -f "$DOE" ] || DOE="doe_plan.csv"

            python -m trj_opt.cli analyze-batch \
              --doe_csv "$DOE" \
              --te_dir "$(dirname "$TE")" \
              --dos_dir "$(dirname "$DIT")" \
              --out_dir "$OUT"

            python -m trj_opt.cli plot-pareto \
              --analyzed_csv "$OUT/doe_plan_analyzed.csv" \
              --out_dir "$OUT"

            python -m trj_opt.cli report \
              --analyzed_csv "$OUT/doe_plan_analyzed.csv" \
              --out_dir "$OUT"
          fi

      - name: Upload demo outputs
        uses: actions/upload-artifact@v4
        with:
          name: demo-outputs
          path: |
            trj_opt_out/**
            outputs/**
            **/*.png
            **/*.pdf
            **/*.json
          if-no-files-found: warn
