name: demo

on:
  push:
  workflow_dispatch:

jobs:
  run-demo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

        - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Core scientific stack your CLI imports/likely uses:
          pip install \
            numpy>=1.24 \
            pandas>=2.0 \
            matplotlib>=3.8 \
            scipy>=1.11 \
            reportlab>=4.0
          # If you later add requirements.txt, this line will install from it:
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Make your src layout importable: trj_opt_ultimate/src/trj_opt/cli.py => module "trj_opt"
      - name: Add src to PYTHONPATH
        run: |
          echo "PYTHONPATH=$GITHUB_WORKSPACE/trj_opt_ultimate/src:$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "Using PYTHONPATH=$GITHUB_WORKSPACE/trj_opt_ultimate/src:$GITHUB_WORKSPACE"

      - name: Sanity check CLI
        run: |
          python -c "import trj_opt, sys; print('Imported trj_opt OK')"
          python -m trj_opt.cli --help

      - name: Run demo (built-in if available)
        run: |
          set -e
          mkdir -p trj_opt_out
          if python -m trj_opt.cli demo; then
            echo "Ran built-in demo."
          else
            echo "No 'demo' subcommand — running minimal pipeline."
            # Prefer examples/ if present; fallback to repo root
            TE="examples/run_demo_T.csv";   [ -f "$TE" ]  || TE="run_demo_T.csv"
            DIT="examples/run_demo_Dit.csv"; [ -f "$DIT" ] || DIT="run_demo_Dit.csv"
            # Core metrics
            python -m trj_opt.cli compute-rhoc --te_csv "$TE"  --out_json trj_opt_out/rho_c.json
            python -m trj_opt.cli compute-srh  --dit_csv "$DIT" --out_json trj_opt_out/srh.json
            # Optional (ignore failure if analyzed CSV isn’t produced)
            python -m trj_opt.cli plot-pareto --analyzed_csv trj_opt_out/doe_plan_analyzed.csv --out_dir trj_opt_out || true
            python -m trj_opt.cli report      --analyzed_csv trj_opt_out/doe_plan_analyzed.csv --out_dir trj_opt_out || true
          fi

      - name: Upload demo outputs
        uses: actions/upload-artifact@v4
        with:
          name: demo-outputs
          path: |
            trj_opt_out/
            outputs/
            **/*.png
            **/*.pdf
            **/*.json
          if-no-files-found: warn
